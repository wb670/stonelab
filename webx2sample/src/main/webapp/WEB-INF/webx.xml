<?xml version="1.0" encoding="GB2312"?>
<configuration>
    <services>
        <service name="ResourceLoaderService" class="com.alibaba.service.resource.DefaultResourceLoaderService">
            <property name="resource.descriptors">
                <value>/webroot/WEB-INF/resources.xml</value>
            </property>
        </service>
        <service name="RunDataService" class="com.alibaba.webx.service.rundata.DefaultRunDataService">
            <!-- - 缓存所有内容。 -->
            <property name="request.buffered.class" value="com.alibaba.webx.request.context.buffered.BufferedRequestContextFactory" />
            <!-- - 延迟提交请求。 -->
            <property name="request.lazycommit.class" value="com.alibaba.webx.request.context.lazycommit.LazyCommitRequestContextFactory" />
            <!-- - 自动parse参数(包括upload form). -->
            <property name="request.parser.class" value="com.alibaba.webx.request.context.parser.ParserRequestContextFactory" />
            <!-- - Session Store。 -->
            <property name="request.session">
                <property name="class" value="com.alibaba.webx.session.request.SessionRequestContextFactory" />
                <!--cookie设置 -->
                <property name="session.cookie.domain" value="" />
                <property name="session.cookie.path" value="/" />
                <property name="session.cookie.maxAge" value="0" />
                <!-- memory store -->
                <property name="session.store.memory">
                    <property name="class" value="com.alibaba.webx.session.store.simple.SimpleMemoryStore" />
                    <property name="match" value="user" />
                </property>
                <!--temporary cookie store -->
                <property name="session.store.temporary">
                    <property name="class" value="com.alibaba.webx.session.store.cookie.CookieStore" />
                    <property name="match" value="*" />
                    <property name="cookie.name" value="tmp" />
                    <property name="cookie.permanent" value="false" />
                </property>
            </property>
            <!-- - 设置请求的locale/charset. -->
            <property name="request.locale">
                <property name="class" value="com.alibaba.webx.request.context.locale.SetLocaleRequestContextFactory" />
                <property name="defaultLocale" value="zh_CN" />
                <property name="defaultCharset" value="UTF-8" />
            </property>
        </service>
        <service name="ParameterParserFilterService" class="com.alibaba.webx.request.service.HTMLInputFilterService">
            <property name="allowed">
                <property name="a" value="href, target" />
                <property name="img" value="src, width, height, alt" />
                <property name="b" value="" />
                <property name="strong" value="" />
                <property name="i" value="" />
                <property name="em" value="" />
            </property>
            <property name="selfClosingTags" value="img" />
            <property name="needClosingTags" value="a, b, strong, i, em" />
            <property name="allowedProtocols" value="http, mailto" />
            <property name="protocolAtts" value="src, href" />
            <property name="removeBlanks" value="a, b, strong, i, em" />
            <property name="allowedEntities" value="amp, gt, lt, quot" />
        </service>

        <service name="ModuleLoaderService">
            <property name="module.packages">
                <value>com.alibaba.stonelab.webx2sample.web.module</value>
            </property>
        </service>

        <!-- Velocity模板引擎，用来渲染velocity写成的页面模板。需要TemplateService的支持。 -->
        <service name="VelocityService" class="com.alibaba.service.velocity.DefaultVelocityService" earlyInit="true">
            <property name="file.resource.loader.path" value="/templates" />
            <property name="file.resource.loader.cache" value="true" />
            <property name="input.encoding" value="GBK" />
            <property name="parser.pool.size" value="20" />
            <property name="velocimacro.library" value="macros.vm" />
        </service>
        <!-- 读取并验证用户submit的form表单的service。 -->
        <service name="FormService" class="com.alibaba.service.form.DefaultFormService">
            <property name="form.descriptors">
                <value>WEB-INF/form.xml</value>
            </property>
        </service>

        <service name="PipelineService" class="com.alibaba.service.pipeline.DefaultPipelineService">
            <property name="pipeline.default.descriptor" value="/webx2/pipeline.xml" />
        </service>
    </services>
    <!-- ==================================================================== -->
    <!-- 以下是sub-instances的service设置。 -->
    <!-- ==================================================================== -->
    <instance name="component">
        <services>
            <!-- ================================================================ -->
            <!-- 装载资源 - 一切文件和目录都是从这里装载的 -->
            <!-- ================================================================ -->
            <service name="ResourceLoaderService" class="com.alibaba.service.resource.DefaultResourceLoaderService">
                <property name="resource.descriptors">
                    <!-- 全局资源文件，从/webroot中查找 -->
                    <value>/webroot/WEB-INF/resources.xml</value>
                </property>
            </service>
            <!-- ================================================================ -->
            <!-- Webx管道 - 定义了请求执行的流程 -->
            <!-- ================================================================ -->
            <service name="PipelineService" class="com.alibaba.service.pipeline.DefaultPipelineService">
                <property name="pipeline.default.descriptor" value="/webx2/pipeline.xml" />
            </service>
            <!-- ================================================================ -->
            <!-- 装载modules - 例如：screen、action、control等 -->
            <!-- ================================================================ -->
            <service name="ModuleLoaderService" class="com.alibaba.turbine.service.moduleloader.DefaultModuleLoaderService">
                <property name="module.ref.resolver">
                    <property name="class" value="com.alibaba.turbine.service.moduleloader.factory.SpringReferenceResolver" />
                </property>
            </service>
            <!-- ================================================================ -->
            <!-- Velocity模板引擎 -->
            <!-- ================================================================ -->
            <service name="VelocityService" class="com.alibaba.service.velocity.DefaultVelocityService"
                earlyInit="true">
                <property name="input.encoding" value="GBK" />
            </service>
            <!-- ================================================================ -->
            <!-- 验证表单 -->
            <!-- ================================================================ -->
            <service name="FormService" class="com.alibaba.service.form.DefaultFormService">
                <property name="form.descriptors">
                    <value>WEB-INF/form.xml</value>
                </property>
            </service>
            <!-- ================================================================ -->
            <!-- 生成URI -->
            <!-- ================================================================ -->
            <service name="URIBrokerService" class="com.alibaba.service.uribroker.DefaultURIBrokerService">
                <property name="uri.descriptors">
                    <value>/webroot/WEB-INF/uri.xml</value>
                </property>
            </service>
            <!-- ================================================================ -->
            <!-- Spring BeanFactory，以IoC的方式生成beans -->
            <!-- ================================================================ -->
            <service name="BeanFactoryService" class="com.alibaba.service.spring.DefaultBeanFactoryService">
                <property name="bean.descriptors">
                </property>
            </service>
            <!-- ================================================================ -->
            <!-- Pull Tools -->
            <!-- ================================================================ -->
            <service name="PullService" class="com.alibaba.service.pull.DefaultPullService">
                <property name="tool.request">
                    <property name="csrfToken" value="com.alibaba.turbine.util.CsrfToken" />
                </property>
            </service>
            <!-- ================================================================ -->
            <!-- 将target映射成module或template -->
            <!-- ================================================================ -->
            <service name="MappingService" class="com.alibaba.turbine.service.mapping.DefaultMappingService">
                <!-- Target name => Screen module name (*.jsp, *.vm) -->
                <property name="mapper.screen">
                    <property name="matchLastName" value="true" />
                </property>
                <!-- Target name => Layout module name -->
                <property name="mapper.layout">
                    <property name="matchLastName" value="true" />
                </property>
                <!-- Target name => Layout template name -->
                <property name="mapper.layout.template">
                    <property name="matchLastName" value="true" />
                </property>
                <!-- Target name => Control module name (setTemplate method) -->
                <property name="mapper.control">
                    <property name="matchLastName" value="true" />
                </property>
            </service>
        </services>
    </instance>
</configuration>
